input {
  tcp {
    port => 5500
    type => nlog
  }
  tcp {
    port => 5005
    type => syslog
  }
  udp {
    port => 5000
    type => nlog
  }
}
filter {
  if [type] == "nlog" {
    grok {
      match => { "message" => "\[%{GREEDYDATA:raw_timestamp}\] \[%{DATA:level}\s*\] \|%{DATA:logger}\s*\|%{GREEDYDATA:message}\|%{GREEDYDATA:stack}" }
	  overwrite => [ "message" ]
    }
    syslog_pri { }
    date {
     	  match => [ "raw_timestamp", "YYYY-MM-dd HH:mm:ss.SSSS"]
		  target => "@timestamp"
    }   
    mutate {
      remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
	  gsub => [
      # replace backslashes, question marks, hashes, and minuses
      # with a dot "."
      "stack", "->", "
	  "
      ]
    }
  }
   if [type] == "syslog" {
    if ([message] =~ "^\tat ") {
      drop {}
    }
 
    grok {
      break_on_match => false
      match => [ "message", " responded with %{NUMBER:status_code:int}" ]
      tag_on_failure => []
    }
 
    grok {
      break_on_match => false
      match => [ "message", " in %{NUMBER:response_time:int}ms" ]
      tag_on_failure => []
    }
  }
}
output {
  stdout { codec => rubydebug }
   if [level] == "Error" {
    email {
      to => 'username@yourmailserver.com'
      from => 'username@yandex.ru'
      subject => 'Alert - %{level}'
      body => "Tags: %{message}\nContent:\n%{stack}"
      via => "smtp"
      address => "smtp.yandex.ru"
	  use_tls	=> true
      port => 587
	  authentication =>   "login"
      username => "username@yandex.ru"
      password => "password_for_smtp"
    }
  }
  if "_grokparsefailure" in [tags] or "_jsonparsefailure" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "parse-err-%{+YYYY.MM.dd}"
    }
  }
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "logstash-%{+YYYY.MM.dd}"
  }
}